{"remainingRequest":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js??ref--9-3!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\entities\\label\\label.route.ts","dependencies":[{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\entities\\label\\label.route.ts","mtime":1554281232212},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar core_2 = require(\"app/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar label_model_1 = require(\"app/shared/model/label.model\");\r\nvar label_service_1 = require(\"./label.service\");\r\nvar label_component_1 = require(\"./label.component\");\r\nvar label_detail_component_1 = require(\"./label-detail.component\");\r\nvar label_update_component_1 = require(\"./label-update.component\");\r\nvar label_delete_dialog_component_1 = require(\"./label-delete-dialog.component\");\r\nvar LabelResolve = /** @class */ (function () {\r\n    function LabelResolve(service) {\r\n        this.service = service;\r\n    }\r\n    LabelResolve.prototype.resolve = function (route, state) {\r\n        var id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(operators_1.filter(function (response) { return response.ok; }), operators_1.map(function (label) { return label.body; }));\r\n        }\r\n        return rxjs_1.of(new label_model_1.Label());\r\n    };\r\n    var _a;\r\n    LabelResolve = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof label_service_1.LabelService !== \"undefined\" && label_service_1.LabelService) === \"function\" ? _a : Object])\r\n    ], LabelResolve);\r\n    return LabelResolve;\r\n}());\r\nexports.LabelResolve = LabelResolve;\r\nexports.labelRoute = [\r\n    {\r\n        path: '',\r\n        component: label_component_1.LabelComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'jhipsterElasticsearchSampleApplicationApp.label.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: label_detail_component_1.LabelDetailComponent,\r\n        resolve: {\r\n            label: LabelResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'jhipsterElasticsearchSampleApplicationApp.label.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: label_update_component_1.LabelUpdateComponent,\r\n        resolve: {\r\n            label: LabelResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'jhipsterElasticsearchSampleApplicationApp.label.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: label_update_component_1.LabelUpdateComponent,\r\n        resolve: {\r\n            label: LabelResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'jhipsterElasticsearchSampleApplicationApp.label.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    }\r\n];\r\nexports.labelPopupRoute = [\r\n    {\r\n        path: ':id/delete',\r\n        component: label_delete_dialog_component_1.LabelDeletePopupComponent,\r\n        resolve: {\r\n            label: LabelResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'jhipsterElasticsearchSampleApplicationApp.label.home.title'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n",{"version":3,"file":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\entities\\label\\label.route.ts","sourceRoot":"","sources":["E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\entities\\label\\label.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,iCAAkD;AAClD,6BAAsC;AACtC,4CAA6C;AAC7C,4DAAqD;AACrD,iDAA+C;AAC/C,qDAAmD;AACnD,mEAAgE;AAChE,mEAAgE;AAChE,iFAA4E;AAI5E;IACI,sBAAoB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;IAAG,CAAC;IAE7C,8BAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,IAAI,EAAE,EAAE;YACJ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAC7B,kBAAM,CAAC,UAAC,QAA6B,IAAK,OAAA,QAAQ,CAAC,EAAE,EAAX,CAAW,CAAC,EACtD,eAAG,CAAC,UAAC,KAA0B,IAAK,OAAA,KAAK,CAAC,IAAI,EAAV,CAAU,CAAC,CAClD,CAAC;SACL;QACD,OAAO,SAAE,CAAC,IAAI,mBAAK,EAAE,CAAC,CAAC;IAC3B,CAAC;;IAZQ,YAAY;QADxB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEF,4BAAY,oBAAZ,4BAAY;OADhC,YAAY,CAaxB;IAAD,mBAAC;CAAA,AAbD,IAaC;AAbY,oCAAY;AAeZ,QAAA,UAAU,GAAW;IAC9B;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gCAAc;QACzB,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,4DAA4D;SAC1E;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,6CAAoB;QAC/B,OAAO,EAAE;YACL,KAAK,EAAE,YAAY;SACtB;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,4DAA4D;SAC1E;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,6CAAoB;QAC/B,OAAO,EAAE;YACL,KAAK,EAAE,YAAY;SACtB;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,4DAA4D;SAC1E;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,6CAAoB;QAC/B,OAAO,EAAE;YACL,KAAK,EAAE,YAAY;SACtB;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,4DAA4D;SAC1E;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;CACJ,CAAC;AAEW,QAAA,eAAe,GAAW;IACnC;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,yDAAyB;QACpC,OAAO,EAAE;YACL,KAAK,EAAE,YAAY;SACtB;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,4DAA4D;SAC1E;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAClB;CACJ,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\r\nimport { UserRouteAccessService } from 'app/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Label } from 'app/shared/model/label.model';\r\nimport { LabelService } from './label.service';\r\nimport { LabelComponent } from './label.component';\r\nimport { LabelDetailComponent } from './label-detail.component';\r\nimport { LabelUpdateComponent } from './label-update.component';\r\nimport { LabelDeletePopupComponent } from './label-delete-dialog.component';\r\nimport { ILabel } from 'app/shared/model/label.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LabelResolve implements Resolve<ILabel> {\r\n    constructor(private service: LabelService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ILabel> {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(\r\n                filter((response: HttpResponse<Label>) => response.ok),\r\n                map((label: HttpResponse<Label>) => label.body)\r\n            );\r\n        }\r\n        return of(new Label());\r\n    }\r\n}\r\n\r\nexport const labelRoute: Routes = [\r\n    {\r\n        path: '',\r\n        component: LabelComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'jhipsterElasticsearchSampleApplicationApp.label.home.title'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: LabelDetailComponent,\r\n        resolve: {\r\n            label: LabelResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'jhipsterElasticsearchSampleApplicationApp.label.home.title'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: LabelUpdateComponent,\r\n        resolve: {\r\n            label: LabelResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'jhipsterElasticsearchSampleApplicationApp.label.home.title'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: LabelUpdateComponent,\r\n        resolve: {\r\n            label: LabelResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'jhipsterElasticsearchSampleApplicationApp.label.home.title'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n\r\nexport const labelPopupRoute: Routes = [\r\n    {\r\n        path: ':id/delete',\r\n        component: LabelDeletePopupComponent,\r\n        resolve: {\r\n            label: LabelResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'jhipsterElasticsearchSampleApplicationApp.label.home.title'\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n"]}]}