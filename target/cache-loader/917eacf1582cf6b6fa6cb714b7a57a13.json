{"remainingRequest":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js??ref--9-3!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\entities\\label\\label-delete-dialog.component.ts","dependencies":[{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\entities\\label\\label-delete-dialog.component.ts","mtime":1554281232210},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar label_service_1 = require(\"./label.service\");\r\nvar LabelDeleteDialogComponent = /** @class */ (function () {\r\n    function LabelDeleteDialogComponent(labelService, activeModal, eventManager) {\r\n        this.labelService = labelService;\r\n        this.activeModal = activeModal;\r\n        this.eventManager = eventManager;\r\n    }\r\n    LabelDeleteDialogComponent.prototype.clear = function () {\r\n        this.activeModal.dismiss('cancel');\r\n    };\r\n    LabelDeleteDialogComponent.prototype.confirmDelete = function (id) {\r\n        var _this = this;\r\n        this.labelService.delete(id).subscribe(function (response) {\r\n            _this.eventManager.broadcast({\r\n                name: 'labelListModification',\r\n                content: 'Deleted an label'\r\n            });\r\n            _this.activeModal.dismiss(true);\r\n        });\r\n    };\r\n    var _a, _b, _c;\r\n    LabelDeleteDialogComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-label-delete-dialog',\r\n            templateUrl: './label-delete-dialog.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof label_service_1.LabelService !== \"undefined\" && label_service_1.LabelService) === \"function\" ? _a : Object, typeof (_b = typeof ng_bootstrap_1.NgbActiveModal !== \"undefined\" && ng_bootstrap_1.NgbActiveModal) === \"function\" ? _b : Object, typeof (_c = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _c : Object])\r\n    ], LabelDeleteDialogComponent);\r\n    return LabelDeleteDialogComponent;\r\n}());\r\nexports.LabelDeleteDialogComponent = LabelDeleteDialogComponent;\r\nvar LabelDeletePopupComponent = /** @class */ (function () {\r\n    function LabelDeletePopupComponent(activatedRoute, router, modalService) {\r\n        this.activatedRoute = activatedRoute;\r\n        this.router = router;\r\n        this.modalService = modalService;\r\n    }\r\n    LabelDeletePopupComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.activatedRoute.data.subscribe(function (_a) {\r\n            var label = _a.label;\r\n            setTimeout(function () {\r\n                _this.ngbModalRef = _this.modalService.open(LabelDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n                _this.ngbModalRef.componentInstance.label = label;\r\n                _this.ngbModalRef.result.then(function (result) {\r\n                    _this.router.navigate(['/label', { outlets: { popup: null } }]);\r\n                    _this.ngbModalRef = null;\r\n                }, function (reason) {\r\n                    _this.router.navigate(['/label', { outlets: { popup: null } }]);\r\n                    _this.ngbModalRef = null;\r\n                });\r\n            }, 0);\r\n        });\r\n    };\r\n    LabelDeletePopupComponent.prototype.ngOnDestroy = function () {\r\n        this.ngbModalRef = null;\r\n    };\r\n    var _d, _e, _f;\r\n    LabelDeletePopupComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-label-delete-popup',\r\n            template: ''\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_d = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _d : Object, typeof (_e = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _e : Object, typeof (_f = typeof ng_bootstrap_1.NgbModal !== \"undefined\" && ng_bootstrap_1.NgbModal) === \"function\" ? _f : Object])\r\n    ], LabelDeletePopupComponent);\r\n    return LabelDeletePopupComponent;\r\n}());\r\nexports.LabelDeletePopupComponent = LabelDeletePopupComponent;\r\n",{"version":3,"file":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\entities\\label\\label-delete-dialog.component.ts","sourceRoot":"","sources":["E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\entities\\label\\label-delete-dialog.component.ts"],"names":[],"mappings":";;;AAAA,sCAA6D;AAC7D,0CAAyD;AAEzD,2DAAmF;AACnF,2CAA8C;AAG9C,iDAA+C;AAM/C;IAGI,oCAAsB,YAA0B,EAAS,WAA2B,EAAY,YAA6B;QAAvG,iBAAY,GAAZ,YAAY,CAAc;QAAS,gBAAW,GAAX,WAAW,CAAgB;QAAY,iBAAY,GAAZ,YAAY,CAAiB;IAAG,CAAC;IAEjI,0CAAK,GAAL;QACI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAED,kDAAa,GAAb,UAAc,EAAU;QAAxB,iBAQC;QAPG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAA,QAAQ;YAC3C,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC;gBACxB,IAAI,EAAE,uBAAuB;gBAC7B,OAAO,EAAE,kBAAkB;aAC9B,CAAC,CAAC;YACH,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;;IAjBQ,0BAA0B;QAJtC,gBAAS,CAAC;YACP,QAAQ,EAAE,yBAAyB;YACnC,WAAW,EAAE,sCAAsC;SACtD,CAAC;qEAIsC,4BAAY,oBAAZ,4BAAY,oDAAsB,6BAAc,oBAAd,6BAAc,oDAA0B,6BAAe,oBAAf,6BAAe;OAHpH,0BAA0B,CAkBtC;IAAD,iCAAC;CAAA,AAlBD,IAkBC;AAlBY,gEAA0B;AAwBvC;IAGI,mCAAsB,cAA8B,EAAY,MAAc,EAAY,YAAsB;QAA1F,mBAAc,GAAd,cAAc,CAAgB;QAAY,WAAM,GAAN,MAAM,CAAQ;QAAY,iBAAY,GAAZ,YAAY,CAAU;IAAG,CAAC;IAEpH,4CAAQ,GAAR;QAAA,iBAiBC;QAhBG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,UAAC,EAAS;gBAAP,gBAAK;YACvC,UAAU,CAAC;gBACP,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0BAAuC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACvH,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;gBACjD,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CACxB,UAAA,MAAM;oBACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;oBAC/D,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC5B,CAAC,EACD,UAAA,MAAM;oBACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;oBAC/D,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC5B,CAAC,CACJ,CAAC;YACN,CAAC,EAAE,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAW,GAAX;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;;IA1BQ,yBAAyB;QAJrC,gBAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;YAClC,QAAQ,EAAE,EAAE;SACf,CAAC;qEAIwC,uBAAc,oBAAd,uBAAc,oDAAoB,eAAM,oBAAN,eAAM,oDAA0B,uBAAQ,oBAAR,uBAAQ;OAHvG,yBAAyB,CA2BrC;IAAD,gCAAC;CAAA,AA3BD,IA2BC;AA3BY,8DAAyB","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { NgbActiveModal, NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { JhiEventManager } from 'ng-jhipster';\r\n\r\nimport { ILabel } from 'app/shared/model/label.model';\r\nimport { LabelService } from './label.service';\r\n\r\n@Component({\r\n    selector: 'jhi-label-delete-dialog',\r\n    templateUrl: './label-delete-dialog.component.html'\r\n})\r\nexport class LabelDeleteDialogComponent {\r\n    label: ILabel;\r\n\r\n    constructor(protected labelService: LabelService, public activeModal: NgbActiveModal, protected eventManager: JhiEventManager) {}\r\n\r\n    clear() {\r\n        this.activeModal.dismiss('cancel');\r\n    }\r\n\r\n    confirmDelete(id: number) {\r\n        this.labelService.delete(id).subscribe(response => {\r\n            this.eventManager.broadcast({\r\n                name: 'labelListModification',\r\n                content: 'Deleted an label'\r\n            });\r\n            this.activeModal.dismiss(true);\r\n        });\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-label-delete-popup',\r\n    template: ''\r\n})\r\nexport class LabelDeletePopupComponent implements OnInit, OnDestroy {\r\n    protected ngbModalRef: NgbModalRef;\r\n\r\n    constructor(protected activatedRoute: ActivatedRoute, protected router: Router, protected modalService: NgbModal) {}\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.data.subscribe(({ label }) => {\r\n            setTimeout(() => {\r\n                this.ngbModalRef = this.modalService.open(LabelDeleteDialogComponent as Component, { size: 'lg', backdrop: 'static' });\r\n                this.ngbModalRef.componentInstance.label = label;\r\n                this.ngbModalRef.result.then(\r\n                    result => {\r\n                        this.router.navigate(['/label', { outlets: { popup: null } }]);\r\n                        this.ngbModalRef = null;\r\n                    },\r\n                    reason => {\r\n                        this.router.navigate(['/label', { outlets: { popup: null } }]);\r\n                        this.ngbModalRef = null;\r\n                    }\r\n                );\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.ngbModalRef = null;\r\n    }\r\n}\r\n"]}]}