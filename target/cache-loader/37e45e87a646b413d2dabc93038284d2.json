{"remainingRequest":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js??ref--9-3!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\account\\register\\register.component.ts","dependencies":[{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\account\\register\\register.component.ts","mtime":1554281232133},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar core_2 = require(\"app/core\");\r\nvar register_service_1 = require(\"./register.service\");\r\nvar RegisterComponent = /** @class */ (function () {\r\n    function RegisterComponent(languageService, loginModalService, registerService, elementRef, renderer) {\r\n        this.languageService = languageService;\r\n        this.loginModalService = loginModalService;\r\n        this.registerService = registerService;\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n    }\r\n    RegisterComponent.prototype.ngOnInit = function () {\r\n        this.success = false;\r\n        this.registerAccount = {};\r\n    };\r\n    RegisterComponent.prototype.ngAfterViewInit = function () {\r\n        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#login'), 'focus', []);\r\n    };\r\n    RegisterComponent.prototype.register = function () {\r\n        var _this = this;\r\n        if (this.registerAccount.password !== this.confirmPassword) {\r\n            this.doNotMatch = 'ERROR';\r\n        }\r\n        else {\r\n            this.doNotMatch = null;\r\n            this.error = null;\r\n            this.errorUserExists = null;\r\n            this.errorEmailExists = null;\r\n            this.languageService.getCurrent().then(function (key) {\r\n                _this.registerAccount.langKey = key;\r\n                _this.registerService.save(_this.registerAccount).subscribe(function () {\r\n                    _this.success = true;\r\n                }, function (response) { return _this.processError(response); });\r\n            });\r\n        }\r\n    };\r\n    RegisterComponent.prototype.openLogin = function () {\r\n        this.modalRef = this.loginModalService.open();\r\n    };\r\n    RegisterComponent.prototype.processError = function (response) {\r\n        this.success = null;\r\n        if (response.status === 400 && response.error.type === shared_1.LOGIN_ALREADY_USED_TYPE) {\r\n            this.errorUserExists = 'ERROR';\r\n        }\r\n        else if (response.status === 400 && response.error.type === shared_1.EMAIL_ALREADY_USED_TYPE) {\r\n            this.errorEmailExists = 'ERROR';\r\n        }\r\n        else {\r\n            this.error = 'ERROR';\r\n        }\r\n    };\r\n    var _a, _b, _c, _d, _e;\r\n    RegisterComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-register',\r\n            templateUrl: './register.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiLanguageService !== \"undefined\" && ng_jhipster_1.JhiLanguageService) === \"function\" ? _a : Object, typeof (_b = typeof core_2.LoginModalService !== \"undefined\" && core_2.LoginModalService) === \"function\" ? _b : Object, typeof (_c = typeof register_service_1.Register !== \"undefined\" && register_service_1.Register) === \"function\" ? _c : Object, typeof (_d = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" ? _d : Object, typeof (_e = typeof core_1.Renderer !== \"undefined\" && core_1.Renderer) === \"function\" ? _e : Object])\r\n    ], RegisterComponent);\r\n    return RegisterComponent;\r\n}());\r\nexports.RegisterComponent = RegisterComponent;\r\n",{"version":3,"file":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\account\\register\\register.component.ts","sourceRoot":"","sources":["E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\account\\register\\register.component.ts"],"names":[],"mappings":";;;AAAA,sCAAuF;AAGvF,2CAAiD;AAEjD,qCAA8E;AAC9E,iCAA6C;AAC7C,uDAA8C;AAM9C;IAUI,2BACY,eAAmC,EACnC,iBAAoC,EACpC,eAAyB,EACzB,UAAsB,EACtB,QAAkB;QAJlB,oBAAe,GAAf,eAAe,CAAoB;QACnC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAU;QACzB,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAU;IAC3B,CAAC;IAEJ,oCAAQ,GAAR;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,2CAAe,GAAf;QACI,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAC1G,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAkBC;QAjBG,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,KAAK,IAAI,CAAC,eAAe,EAAE;YACxD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;SAC7B;aAAM;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,GAAG;gBACtC,KAAI,CAAC,eAAe,CAAC,OAAO,GAAG,GAAG,CAAC;gBACnC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CACrD;oBACI,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACxB,CAAC,EACD,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAA3B,CAA2B,CAC1C,CAAC;YACN,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED,qCAAS,GAAT;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAClD,CAAC;IAEO,wCAAY,GAApB,UAAqB,QAA2B;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,gCAAuB,EAAE;YAC5E,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;SAClC;aAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,gCAAuB,EAAE;YACnF,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;SACnC;aAAM;YACH,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;SACxB;IACL,CAAC;;IA5DQ,iBAAiB;QAJ7B,gBAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,2BAA2B;SAC3C,CAAC;qEAY+B,gCAAkB,oBAAlB,gCAAkB,oDAChB,wBAAiB,oBAAjB,wBAAiB,oDACnB,2BAAQ,oBAAR,2BAAQ,oDACb,iBAAU,oBAAV,iBAAU,oDACZ,eAAQ,oBAAR,eAAQ;OAfrB,iBAAiB,CA6D7B;IAAD,wBAAC;CAAA,AA7DD,IA6DC;AA7DY,8CAAiB","sourcesContent":["import { Component, OnInit, AfterViewInit, Renderer, ElementRef } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { JhiLanguageService } from 'ng-jhipster';\r\n\r\nimport { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from 'app/shared';\r\nimport { LoginModalService } from 'app/core';\r\nimport { Register } from './register.service';\r\n\r\n@Component({\r\n    selector: 'jhi-register',\r\n    templateUrl: './register.component.html'\r\n})\r\nexport class RegisterComponent implements OnInit, AfterViewInit {\r\n    confirmPassword: string;\r\n    doNotMatch: string;\r\n    error: string;\r\n    errorEmailExists: string;\r\n    errorUserExists: string;\r\n    registerAccount: any;\r\n    success: boolean;\r\n    modalRef: NgbModalRef;\r\n\r\n    constructor(\r\n        private languageService: JhiLanguageService,\r\n        private loginModalService: LoginModalService,\r\n        private registerService: Register,\r\n        private elementRef: ElementRef,\r\n        private renderer: Renderer\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.success = false;\r\n        this.registerAccount = {};\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#login'), 'focus', []);\r\n    }\r\n\r\n    register() {\r\n        if (this.registerAccount.password !== this.confirmPassword) {\r\n            this.doNotMatch = 'ERROR';\r\n        } else {\r\n            this.doNotMatch = null;\r\n            this.error = null;\r\n            this.errorUserExists = null;\r\n            this.errorEmailExists = null;\r\n            this.languageService.getCurrent().then(key => {\r\n                this.registerAccount.langKey = key;\r\n                this.registerService.save(this.registerAccount).subscribe(\r\n                    () => {\r\n                        this.success = true;\r\n                    },\r\n                    response => this.processError(response)\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    openLogin() {\r\n        this.modalRef = this.loginModalService.open();\r\n    }\r\n\r\n    private processError(response: HttpErrorResponse) {\r\n        this.success = null;\r\n        if (response.status === 400 && response.error.type === LOGIN_ALREADY_USED_TYPE) {\r\n            this.errorUserExists = 'ERROR';\r\n        } else if (response.status === 400 && response.error.type === EMAIL_ALREADY_USED_TYPE) {\r\n            this.errorEmailExists = 'ERROR';\r\n        } else {\r\n            this.error = 'ERROR';\r\n        }\r\n    }\r\n}\r\n"]}]}