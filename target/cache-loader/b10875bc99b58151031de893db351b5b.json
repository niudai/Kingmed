{"remainingRequest":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js??ref--9-3!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\entities\\disease-guang-dong\\disease-guang-dong.component.ts","dependencies":[{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\entities\\disease-guang-dong\\disease-guang-dong.component.ts","mtime":1554368641999},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar core_2 = require(\"app/core\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar disease_guang_dong_service_1 = require(\"./disease-guang-dong.service\");\r\nvar DiseaseGuangDongComponent = /** @class */ (function () {\r\n    function DiseaseGuangDongComponent(diseaseGuangDongService, parseLinks, jhiAlertService, accountService, activatedRoute, router, eventManager) {\r\n        var _this = this;\r\n        this.diseaseGuangDongService = diseaseGuangDongService;\r\n        this.parseLinks = parseLinks;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.accountService = accountService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.router = router;\r\n        this.eventManager = eventManager;\r\n        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;\r\n        this.routeData = this.activatedRoute.data.subscribe(function (data) {\r\n            _this.page = data.pagingParams.page;\r\n            _this.previousPage = data.pagingParams.page;\r\n            _this.reverse = data.pagingParams.ascending;\r\n            _this.predicate = data.pagingParams.predicate;\r\n        });\r\n        this.currentSearch =\r\n            this.activatedRoute.snapshot && this.activatedRoute.snapshot.params['search']\r\n                ? this.activatedRoute.snapshot.params['search']\r\n                : '';\r\n    }\r\n    DiseaseGuangDongComponent.prototype.loadAll = function () {\r\n        var _this = this;\r\n        if (this.currentSearch) {\r\n            this.diseaseGuangDongService\r\n                .search({\r\n                page: this.page - 1,\r\n                query: this.currentSearch,\r\n                size: this.itemsPerPage\r\n                // sort: this.sort()\r\n            })\r\n                .subscribe(function (res) { return _this.paginateDiseaseGuangDongs(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n            return;\r\n        }\r\n        this.diseaseGuangDongService\r\n            .query({\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage\r\n            // sort: this.sort()\r\n        })\r\n            .subscribe(function (res) { return _this.paginateDiseaseGuangDongs(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    DiseaseGuangDongComponent.prototype.loadPage = function (page) {\r\n        if (page !== this.previousPage) {\r\n            this.previousPage = page;\r\n            this.transition();\r\n        }\r\n    };\r\n    DiseaseGuangDongComponent.prototype.transition = function () {\r\n        this.router.navigate(['/disease-guang-dong'], {\r\n            queryParams: {\r\n                page: this.page,\r\n                size: this.itemsPerPage,\r\n                search: this.currentSearch\r\n                // sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        });\r\n        this.loadAll();\r\n    };\r\n    DiseaseGuangDongComponent.prototype.clear = function () {\r\n        this.page = 0;\r\n        this.currentSearch = '';\r\n        this.router.navigate([\r\n            '/disease-guang-dong',\r\n            {\r\n                page: this.page\r\n                // sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        ]);\r\n        this.loadAll();\r\n    };\r\n    DiseaseGuangDongComponent.prototype.search = function (query) {\r\n        if (!query) {\r\n            return this.clear();\r\n        }\r\n        this.page = 0;\r\n        this.currentSearch = query;\r\n        this.router.navigate([\r\n            '/disease-guang-dong',\r\n            {\r\n                search: this.currentSearch,\r\n                page: this.page\r\n                // sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n                // sort: ''\r\n            }\r\n        ]);\r\n        this.loadAll();\r\n    };\r\n    DiseaseGuangDongComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.loadAll();\r\n        this.accountService.identity().then(function (account) {\r\n            _this.currentAccount = account;\r\n        });\r\n        this.registerChangeInDiseaseGuangDongs();\r\n    };\r\n    DiseaseGuangDongComponent.prototype.ngOnDestroy = function () {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    };\r\n    DiseaseGuangDongComponent.prototype.trackId = function (index, item) {\r\n        return item.id;\r\n    };\r\n    DiseaseGuangDongComponent.prototype.registerChangeInDiseaseGuangDongs = function () {\r\n        var _this = this;\r\n        this.eventSubscriber = this.eventManager.subscribe('diseaseGuangDongListModification', function (response) { return _this.loadAll(); });\r\n    };\r\n    DiseaseGuangDongComponent.prototype.sort = function () {\r\n        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    };\r\n    DiseaseGuangDongComponent.prototype.paginateDiseaseGuangDongs = function (data, headers) {\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        this.diseaseGuangDongs = data;\r\n    };\r\n    DiseaseGuangDongComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g;\r\n    DiseaseGuangDongComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-disease-guang-dong',\r\n            templateUrl: './disease-guang-dong.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof disease_guang_dong_service_1.DiseaseGuangDongService !== \"undefined\" && disease_guang_dong_service_1.DiseaseGuangDongService) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" ? _b : Object, typeof (_c = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _c : Object, typeof (_d = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _d : Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _e : Object, typeof (_f = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _f : Object, typeof (_g = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _g : Object])\r\n    ], DiseaseGuangDongComponent);\r\n    return DiseaseGuangDongComponent;\r\n}());\r\nexports.DiseaseGuangDongComponent = DiseaseGuangDongComponent;\r\n",{"version":3,"file":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\entities\\disease-guang-dong\\disease-guang-dong.component.ts","sourceRoot":"","sources":["E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\entities\\disease-guang-dong\\disease-guang-dong.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JhiEventManager, JhiParseLinks, JhiAlertService } from 'ng-jhipster';\n\nimport { IDiseaseGuangDong } from 'app/shared/model/disease-guang-dong.model';\nimport { AccountService } from 'app/core';\n\nimport { ITEMS_PER_PAGE } from 'app/shared';\nimport { DiseaseGuangDongService } from './disease-guang-dong.service';\n\n@Component({\n    selector: 'jhi-disease-guang-dong',\n    templateUrl: './disease-guang-dong.component.html'\n})\nexport class DiseaseGuangDongComponent implements OnInit, OnDestroy {\n    currentAccount: any;\n    diseaseGuangDongs: IDiseaseGuangDong[];\n    error: any;\n    success: any;\n    eventSubscriber: Subscription;\n    currentSearch: string;\n    routeData: any;\n    links: any;\n    totalItems: any;\n    itemsPerPage: any;\n    page: any;\n    predicate: any;\n    previousPage: any;\n    reverse: any;\n\n    constructor(\n        protected diseaseGuangDongService: DiseaseGuangDongService,\n        protected parseLinks: JhiParseLinks,\n        protected jhiAlertService: JhiAlertService,\n        protected accountService: AccountService,\n        protected activatedRoute: ActivatedRoute,\n        protected router: Router,\n        protected eventManager: JhiEventManager\n    ) {\n        this.itemsPerPage = ITEMS_PER_PAGE;\n        this.routeData = this.activatedRoute.data.subscribe(data => {\n            this.page = data.pagingParams.page;\n            this.previousPage = data.pagingParams.page;\n            this.reverse = data.pagingParams.ascending;\n            this.predicate = data.pagingParams.predicate;\n        });\n        this.currentSearch =\n            this.activatedRoute.snapshot && this.activatedRoute.snapshot.params['search']\n                ? this.activatedRoute.snapshot.params['search']\n                : '';\n    }\n\n    loadAll() {\n        if (this.currentSearch) {\n            this.diseaseGuangDongService\n                .search({\n                    page: this.page - 1,\n                    query: this.currentSearch,\n                    size: this.itemsPerPage\n                    // sort: this.sort()\n                })\n                .subscribe(\n                    (res: HttpResponse<IDiseaseGuangDong[]>) => this.paginateDiseaseGuangDongs(res.body, res.headers),\n                    (res: HttpErrorResponse) => this.onError(res.message)\n                );\n            return;\n        }\n        this.diseaseGuangDongService\n            .query({\n                page: this.page - 1,\n                size: this.itemsPerPage\n                // sort: this.sort()\n            })\n            .subscribe(\n                (res: HttpResponse<IDiseaseGuangDong[]>) => this.paginateDiseaseGuangDongs(res.body, res.headers),\n                (res: HttpErrorResponse) => this.onError(res.message)\n            );\n    }\n\n    loadPage(page: number) {\n        if (page !== this.previousPage) {\n            this.previousPage = page;\n            this.transition();\n        }\n    }\n\n    transition() {\n        this.router.navigate(['/disease-guang-dong'], {\n            queryParams: {\n                page: this.page,\n                size: this.itemsPerPage,\n                search: this.currentSearch\n                // sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\n            }\n        });\n        this.loadAll();\n    }\n\n    clear() {\n        this.page = 0;\n        this.currentSearch = '';\n        this.router.navigate([\n            '/disease-guang-dong',\n            {\n                page: this.page\n                // sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\n            }\n        ]);\n        this.loadAll();\n    }\n\n    search(query) {\n        if (!query) {\n            return this.clear();\n        }\n        this.page = 0;\n        this.currentSearch = query;\n        this.router.navigate([\n            '/disease-guang-dong',\n            {\n                search: this.currentSearch,\n                page: this.page\n                // sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\n                // sort: ''\n            }\n        ]);\n        this.loadAll();\n    }\n\n    ngOnInit() {\n        this.loadAll();\n        this.accountService.identity().then(account => {\n            this.currentAccount = account;\n        });\n        this.registerChangeInDiseaseGuangDongs();\n    }\n\n    ngOnDestroy() {\n        this.eventManager.destroy(this.eventSubscriber);\n    }\n\n    trackId(index: number, item: IDiseaseGuangDong) {\n        return item.id;\n    }\n\n    registerChangeInDiseaseGuangDongs() {\n        this.eventSubscriber = this.eventManager.subscribe('diseaseGuangDongListModification', response => this.loadAll());\n    }\n\n    sort() {\n        const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\n        if (this.predicate !== 'id') {\n            result.push('id');\n        }\n        return result;\n    }\n\n    protected paginateDiseaseGuangDongs(data: IDiseaseGuangDong[], headers: HttpHeaders) {\n        this.links = this.parseLinks.parse(headers.get('link'));\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\n        this.diseaseGuangDongs = data;\n    }\n\n    protected onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n}\n"]}]}