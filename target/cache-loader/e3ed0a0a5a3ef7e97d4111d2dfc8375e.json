{"remainingRequest":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js??ref--9-3!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\account\\settings\\settings.component.ts","dependencies":[{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\account\\settings\\settings.component.ts","mtime":1554281232135},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar core_2 = require(\"app/core\");\r\nvar SettingsComponent = /** @class */ (function () {\r\n    function SettingsComponent(accountService, languageService, languageHelper) {\r\n        this.accountService = accountService;\r\n        this.languageService = languageService;\r\n        this.languageHelper = languageHelper;\r\n    }\r\n    SettingsComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.accountService.identity().then(function (account) {\r\n            _this.settingsAccount = _this.copyAccount(account);\r\n        });\r\n        this.languageHelper.getAll().then(function (languages) {\r\n            _this.languages = languages;\r\n        });\r\n    };\r\n    SettingsComponent.prototype.save = function () {\r\n        var _this = this;\r\n        this.accountService.save(this.settingsAccount).subscribe(function () {\r\n            _this.error = null;\r\n            _this.success = 'OK';\r\n            _this.accountService.identity(true).then(function (account) {\r\n                _this.settingsAccount = _this.copyAccount(account);\r\n            });\r\n            _this.languageService.getCurrent().then(function (current) {\r\n                if (_this.settingsAccount.langKey !== current) {\r\n                    _this.languageService.changeLanguage(_this.settingsAccount.langKey);\r\n                }\r\n            });\r\n        }, function () {\r\n            _this.success = null;\r\n            _this.error = 'ERROR';\r\n        });\r\n    };\r\n    SettingsComponent.prototype.copyAccount = function (account) {\r\n        return {\r\n            activated: account.activated,\r\n            email: account.email,\r\n            firstName: account.firstName,\r\n            langKey: account.langKey,\r\n            lastName: account.lastName,\r\n            login: account.login,\r\n            imageUrl: account.imageUrl\r\n        };\r\n    };\r\n    var _a, _b, _c;\r\n    SettingsComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-settings',\r\n            templateUrl: './settings.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiLanguageService !== \"undefined\" && ng_jhipster_1.JhiLanguageService) === \"function\" ? _b : Object, typeof (_c = typeof core_2.JhiLanguageHelper !== \"undefined\" && core_2.JhiLanguageHelper) === \"function\" ? _c : Object])\r\n    ], SettingsComponent);\r\n    return SettingsComponent;\r\n}());\r\nexports.SettingsComponent = SettingsComponent;\r\n",{"version":3,"file":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\account\\settings\\settings.component.ts","sourceRoot":"","sources":["E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\account\\settings\\settings.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAClD,2CAAiD;AAEjD,iCAA6D;AAM7D;IAMI,2BACY,cAA8B,EAC9B,eAAmC,EACnC,cAAiC;QAFjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAoB;QACnC,mBAAc,GAAd,cAAc,CAAmB;IAC1C,CAAC;IAEJ,oCAAQ,GAAR;QAAA,iBAOC;QANG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACvC,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,UAAA,SAAS;YACvC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gCAAI,GAAJ;QAAA,iBAmBC;QAlBG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CACpD;YACI,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;gBAC3C,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;gBAC1C,IAAI,KAAI,CAAC,eAAe,CAAC,OAAO,KAAK,OAAO,EAAE;oBAC1C,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;iBACrE;YACL,CAAC,CAAC,CAAC;QACP,CAAC,EACD;YACI,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACzB,CAAC,CACJ,CAAC;IACN,CAAC;IAED,uCAAW,GAAX,UAAY,OAAO;QACf,OAAO;YACH,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,QAAQ,EAAE,OAAO,CAAC,QAAQ;SAC7B,CAAC;IACN,CAAC;;IApDQ,iBAAiB;QAJ7B,gBAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,2BAA2B;SAC3C,CAAC;qEAQ8B,qBAAc,oBAAd,qBAAc,oDACb,gCAAkB,oBAAlB,gCAAkB,oDACnB,wBAAiB,oBAAjB,wBAAiB;OATpC,iBAAiB,CAqD7B;IAAD,wBAAC;CAAA,AArDD,IAqDC;AArDY,8CAAiB","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { JhiLanguageService } from 'ng-jhipster';\r\n\r\nimport { AccountService, JhiLanguageHelper } from 'app/core';\r\n\r\n@Component({\r\n    selector: 'jhi-settings',\r\n    templateUrl: './settings.component.html'\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n    error: string;\r\n    success: string;\r\n    settingsAccount: any;\r\n    languages: any[];\r\n\r\n    constructor(\r\n        private accountService: AccountService,\r\n        private languageService: JhiLanguageService,\r\n        private languageHelper: JhiLanguageHelper\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.accountService.identity().then(account => {\r\n            this.settingsAccount = this.copyAccount(account);\r\n        });\r\n        this.languageHelper.getAll().then(languages => {\r\n            this.languages = languages;\r\n        });\r\n    }\r\n\r\n    save() {\r\n        this.accountService.save(this.settingsAccount).subscribe(\r\n            () => {\r\n                this.error = null;\r\n                this.success = 'OK';\r\n                this.accountService.identity(true).then(account => {\r\n                    this.settingsAccount = this.copyAccount(account);\r\n                });\r\n                this.languageService.getCurrent().then(current => {\r\n                    if (this.settingsAccount.langKey !== current) {\r\n                        this.languageService.changeLanguage(this.settingsAccount.langKey);\r\n                    }\r\n                });\r\n            },\r\n            () => {\r\n                this.success = null;\r\n                this.error = 'ERROR';\r\n            }\r\n        );\r\n    }\r\n\r\n    copyAccount(account) {\r\n        return {\r\n            activated: account.activated,\r\n            email: account.email,\r\n            firstName: account.firstName,\r\n            langKey: account.langKey,\r\n            lastName: account.lastName,\r\n            login: account.login,\r\n            imageUrl: account.imageUrl\r\n        };\r\n    }\r\n}\r\n"]}]}