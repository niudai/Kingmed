{"remainingRequest":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js??ref--9-3!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts","dependencies":[{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts","mtime":1554281232146},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\r\nvar metrics_service_1 = require(\"./metrics.service\");\r\nvar JhiMetricsMonitoringComponent = /** @class */ (function () {\r\n    function JhiMetricsMonitoringComponent(modalService, metricsService) {\r\n        this.modalService = modalService;\r\n        this.metricsService = metricsService;\r\n        this.metrics = {};\r\n        this.threadData = {};\r\n        this.updatingMetrics = true;\r\n        this.JCACHE_KEY = 'jcache.statistics';\r\n    }\r\n    JhiMetricsMonitoringComponent.prototype.ngOnInit = function () {\r\n        this.refresh();\r\n    };\r\n    JhiMetricsMonitoringComponent.prototype.refresh = function () {\r\n        var _this = this;\r\n        this.updatingMetrics = true;\r\n        this.metricsService.getMetrics().subscribe(function (metrics) {\r\n            _this.metrics = metrics;\r\n            _this.metricsService.threadDump().subscribe(function (data) {\r\n                _this.threadData = data.threads;\r\n                _this.updatingMetrics = false;\r\n            });\r\n        });\r\n    };\r\n    JhiMetricsMonitoringComponent.prototype.isObjectExisting = function (metrics, key) {\r\n        return metrics && metrics[key];\r\n    };\r\n    JhiMetricsMonitoringComponent.prototype.isObjectExistingAndNotEmpty = function (metrics, key) {\r\n        return this.isObjectExisting(metrics, key) && JSON.stringify(metrics[key]) !== '{}';\r\n    };\r\n    var _a, _b;\r\n    JhiMetricsMonitoringComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-metrics',\r\n            templateUrl: './metrics.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_bootstrap_1.NgbModal !== \"undefined\" && ng_bootstrap_1.NgbModal) === \"function\" ? _a : Object, typeof (_b = typeof metrics_service_1.JhiMetricsService !== \"undefined\" && metrics_service_1.JhiMetricsService) === \"function\" ? _b : Object])\r\n    ], JhiMetricsMonitoringComponent);\r\n    return JhiMetricsMonitoringComponent;\r\n}());\r\nexports.JhiMetricsMonitoringComponent = JhiMetricsMonitoringComponent;\r\n",{"version":3,"file":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts","sourceRoot":"","sources":["E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAClD,2DAAsD;AAEtD,qDAAsD;AAMtD;IAMI,uCAAoB,YAAsB,EAAU,cAAiC;QAAjE,iBAAY,GAAZ,YAAY,CAAU;QAAU,mBAAc,GAAd,cAAc,CAAmB;QALrF,YAAO,GAAQ,EAAE,CAAC;QAClB,eAAU,GAAQ,EAAE,CAAC;QACrB,oBAAe,GAAG,IAAI,CAAC;QAInB,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC;IAC1C,CAAC;IAED,gDAAQ,GAAR;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,+CAAO,GAAP;QAAA,iBASC;QARG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAA,OAAO;YAC9C,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,KAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAA,IAAI;gBAC3C,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC/B,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YACjC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wDAAgB,GAAhB,UAAiB,OAAY,EAAE,GAAW;QACtC,OAAO,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IAED,mEAA2B,GAA3B,UAA4B,OAAY,EAAE,GAAW;QACjD,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;IACxF,CAAC;;IA/BQ,6BAA6B;QAJzC,gBAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,0BAA0B;SAC1C,CAAC;qEAOoC,uBAAQ,oBAAR,uBAAQ,oDAA0B,mCAAiB,oBAAjB,mCAAiB;OAN5E,6BAA6B,CAgCzC;IAAD,oCAAC;CAAA,AAhCD,IAgCC;AAhCY,sEAA6B","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { JhiMetricsService } from './metrics.service';\r\n\r\n@Component({\r\n    selector: 'jhi-metrics',\r\n    templateUrl: './metrics.component.html'\r\n})\r\nexport class JhiMetricsMonitoringComponent implements OnInit {\r\n    metrics: any = {};\r\n    threadData: any = {};\r\n    updatingMetrics = true;\r\n    JCACHE_KEY: string;\r\n\r\n    constructor(private modalService: NgbModal, private metricsService: JhiMetricsService) {\r\n        this.JCACHE_KEY = 'jcache.statistics';\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        this.updatingMetrics = true;\r\n        this.metricsService.getMetrics().subscribe(metrics => {\r\n            this.metrics = metrics;\r\n            this.metricsService.threadDump().subscribe(data => {\r\n                this.threadData = data.threads;\r\n                this.updatingMetrics = false;\r\n            });\r\n        });\r\n    }\r\n\r\n    isObjectExisting(metrics: any, key: string) {\r\n        return metrics && metrics[key];\r\n    }\r\n\r\n    isObjectExistingAndNotEmpty(metrics: any, key: string) {\r\n        return this.isObjectExisting(metrics, key) && JSON.stringify(metrics[key]) !== '{}';\r\n    }\r\n}\r\n"]}]}