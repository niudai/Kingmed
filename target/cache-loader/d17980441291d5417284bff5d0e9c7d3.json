{"remainingRequest":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js??ref--9-3!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\core\\language\\language.helper.ts","dependencies":[{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\core\\language\\language.helper.ts","mtime":1554281232183},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar core_2 = require(\"@ngx-translate/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar language_constants_1 = require(\"app/core/language/language.constants\");\r\nvar JhiLanguageHelper = /** @class */ (function () {\r\n    function JhiLanguageHelper(translateService, titleService, router, rootRenderer) {\r\n        this.translateService = translateService;\r\n        this.titleService = titleService;\r\n        this.router = router;\r\n        this.renderer = null;\r\n        this._language = new rxjs_1.BehaviorSubject(this.translateService.currentLang);\r\n        this.renderer = rootRenderer.createRenderer(document.querySelector('html'), null);\r\n        this.init();\r\n    }\r\n    JhiLanguageHelper.prototype.getAll = function () {\r\n        return Promise.resolve(language_constants_1.LANGUAGES);\r\n    };\r\n    Object.defineProperty(JhiLanguageHelper.prototype, \"language\", {\r\n        get: function () {\r\n            return this._language.asObservable();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Update the window title using params in the following\r\n     * order:\r\n     * 1. titleKey parameter\r\n     * 2. $state.$current.data.pageTitle (current state page title)\r\n     * 3. 'global.title'\r\n     */\r\n    JhiLanguageHelper.prototype.updateTitle = function (titleKey) {\r\n        var _this = this;\r\n        if (!titleKey) {\r\n            titleKey = this.getPageTitle(this.router.routerState.snapshot.root);\r\n        }\r\n        this.translateService.get(titleKey).subscribe(function (title) {\r\n            _this.titleService.setTitle(title);\r\n        });\r\n    };\r\n    JhiLanguageHelper.prototype.init = function () {\r\n        var _this = this;\r\n        this.translateService.onLangChange.subscribe(function (event) {\r\n            _this._language.next(_this.translateService.currentLang);\r\n            _this.renderer.setAttribute(document.querySelector('html'), 'lang', _this.translateService.currentLang);\r\n            _this.updateTitle();\r\n        });\r\n    };\r\n    JhiLanguageHelper.prototype.getPageTitle = function (routeSnapshot) {\r\n        var title = routeSnapshot.data && routeSnapshot.data['pageTitle']\r\n            ? routeSnapshot.data['pageTitle']\r\n            : 'jhipsterElasticsearchSampleApplicationApp';\r\n        if (routeSnapshot.firstChild) {\r\n            title = this.getPageTitle(routeSnapshot.firstChild) || title;\r\n        }\r\n        return title;\r\n    };\r\n    var _a, _b, _c, _d;\r\n    JhiLanguageHelper = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.TranslateService !== \"undefined\" && core_2.TranslateService) === \"function\" ? _a : Object, typeof (_b = typeof platform_browser_1.Title !== \"undefined\" && platform_browser_1.Title) === \"function\" ? _b : Object, typeof (_c = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _c : Object, typeof (_d = typeof core_1.RendererFactory2 !== \"undefined\" && core_1.RendererFactory2) === \"function\" ? _d : Object])\r\n    ], JhiLanguageHelper);\r\n    return JhiLanguageHelper;\r\n}());\r\nexports.JhiLanguageHelper = JhiLanguageHelper;\r\n",{"version":3,"file":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\core\\language\\language.helper.ts","sourceRoot":"","sources":["E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\core\\language\\language.helper.ts"],"names":[],"mappings":";;;AAAA,sCAAwE;AACxE,8DAAkD;AAClD,0CAAiE;AACjE,4CAAwE;AACxE,6BAAmD;AAEnD,2EAAiE;AAGjE;IAII,2BACY,gBAAkC,EAClC,YAAmB,EACnB,MAAc,EACtB,YAA8B;QAHtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAO;QACnB,WAAM,GAAN,MAAM,CAAQ;QAN1B,aAAQ,GAAc,IAAI,CAAC;QASvB,IAAI,CAAC,SAAS,GAAG,IAAI,sBAAe,CAAS,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAChF,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;QAClF,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,kCAAM,GAAN;QACI,OAAO,OAAO,CAAC,OAAO,CAAC,8BAAS,CAAC,CAAC;IACtC,CAAC;IAED,sBAAI,uCAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QACzC,CAAC;;;OAAA;IAED;;;;;;OAMG;IACH,uCAAW,GAAX,UAAY,QAAiB;QAA7B,iBAQC;QAPG,IAAI,CAAC,QAAQ,EAAE;YACX,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACvE;QAED,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK;YAC/C,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,gCAAI,GAAZ;QAAA,iBAMC;QALG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAsB;YAChE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YACvD,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YACtG,KAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,wCAAY,GAApB,UAAqB,aAAqC;QACtD,IAAI,KAAK,GACL,aAAa,CAAC,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC;YACjD,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC;YACjC,CAAC,CAAC,2CAA2C,CAAC;QACtD,IAAI,aAAa,CAAC,UAAU,EAAE;YAC1B,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC;SAChE;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;;IAzDQ,iBAAiB;QAD7B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAMD,uBAAgB,oBAAhB,uBAAgB,oDACpB,wBAAK,oBAAL,wBAAK,oDACX,eAAM,oBAAN,eAAM,oDACR,uBAAgB,oBAAhB,uBAAgB;OARzB,iBAAiB,CA0D7B;IAAD,wBAAC;CAAA,AA1DD,IA0DC;AA1DY,8CAAiB","sourcesContent":["import { Injectable, RendererFactory2, Renderer2 } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { LANGUAGES } from 'app/core/language/language.constants';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class JhiLanguageHelper {\r\n    renderer: Renderer2 = null;\r\n    private _language: BehaviorSubject<string>;\r\n\r\n    constructor(\r\n        private translateService: TranslateService,\r\n        private titleService: Title,\r\n        private router: Router,\r\n        rootRenderer: RendererFactory2\r\n    ) {\r\n        this._language = new BehaviorSubject<string>(this.translateService.currentLang);\r\n        this.renderer = rootRenderer.createRenderer(document.querySelector('html'), null);\r\n        this.init();\r\n    }\r\n\r\n    getAll(): Promise<any> {\r\n        return Promise.resolve(LANGUAGES);\r\n    }\r\n\r\n    get language(): Observable<string> {\r\n        return this._language.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Update the window title using params in the following\r\n     * order:\r\n     * 1. titleKey parameter\r\n     * 2. $state.$current.data.pageTitle (current state page title)\r\n     * 3. 'global.title'\r\n     */\r\n    updateTitle(titleKey?: string) {\r\n        if (!titleKey) {\r\n            titleKey = this.getPageTitle(this.router.routerState.snapshot.root);\r\n        }\r\n\r\n        this.translateService.get(titleKey).subscribe(title => {\r\n            this.titleService.setTitle(title);\r\n        });\r\n    }\r\n\r\n    private init() {\r\n        this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\r\n            this._language.next(this.translateService.currentLang);\r\n            this.renderer.setAttribute(document.querySelector('html'), 'lang', this.translateService.currentLang);\r\n            this.updateTitle();\r\n        });\r\n    }\r\n\r\n    private getPageTitle(routeSnapshot: ActivatedRouteSnapshot) {\r\n        let title: string =\r\n            routeSnapshot.data && routeSnapshot.data['pageTitle']\r\n                ? routeSnapshot.data['pageTitle']\r\n                : 'jhipsterElasticsearchSampleApplicationApp';\r\n        if (routeSnapshot.firstChild) {\r\n            title = this.getPageTitle(routeSnapshot.firstChild) || title;\r\n        }\r\n        return title;\r\n    }\r\n}\r\n"]}]}