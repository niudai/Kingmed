{"remainingRequest":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js??ref--9-3!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\shared\\auth\\has-any-authority.directive.ts","dependencies":[{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\shared\\auth\\has-any-authority.directive.ts","mtime":1554281232237},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar account_service_1 = require(\"app/core/auth/account.service\");\r\n/**\r\n * @whatItDoes Conditionally includes an HTML element if current user has any\r\n * of the authorities passed as the `expression`.\r\n *\r\n * @howToUse\r\n * ```\r\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\r\n *\r\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\r\n * ```\r\n */\r\nvar HasAnyAuthorityDirective = /** @class */ (function () {\r\n    function HasAnyAuthorityDirective(accountService, templateRef, viewContainerRef) {\r\n        this.accountService = accountService;\r\n        this.templateRef = templateRef;\r\n        this.viewContainerRef = viewContainerRef;\r\n    }\r\n    Object.defineProperty(HasAnyAuthorityDirective.prototype, \"jhiHasAnyAuthority\", {\r\n        set: function (value) {\r\n            var _this = this;\r\n            this.authorities = typeof value === 'string' ? [value] : value;\r\n            this.updateView();\r\n            // Get notified each time authentication state changes.\r\n            this.accountService.getAuthenticationState().subscribe(function (identity) { return _this.updateView(); });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    HasAnyAuthorityDirective.prototype.updateView = function () {\r\n        var hasAnyAuthority = this.accountService.hasAnyAuthority(this.authorities);\r\n        this.viewContainerRef.clear();\r\n        if (hasAnyAuthority) {\r\n            this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n        }\r\n    };\r\n    var _a, _b, _c;\r\n    tslib_1.__decorate([\r\n        core_1.Input(),\r\n        tslib_1.__metadata(\"design:type\", Object),\r\n        tslib_1.__metadata(\"design:paramtypes\", [Object])\r\n    ], HasAnyAuthorityDirective.prototype, \"jhiHasAnyAuthority\", null);\r\n    HasAnyAuthorityDirective = tslib_1.__decorate([\r\n        core_1.Directive({\r\n            selector: '[jhiHasAnyAuthority]'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof account_service_1.AccountService !== \"undefined\" && account_service_1.AccountService) === \"function\" ? _a : Object, typeof (_b = typeof core_1.TemplateRef !== \"undefined\" && core_1.TemplateRef) === \"function\" ? _b : Object, typeof (_c = typeof core_1.ViewContainerRef !== \"undefined\" && core_1.ViewContainerRef) === \"function\" ? _c : Object])\r\n    ], HasAnyAuthorityDirective);\r\n    return HasAnyAuthorityDirective;\r\n}());\r\nexports.HasAnyAuthorityDirective = HasAnyAuthorityDirective;\r\n",{"version":3,"file":"E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\shared\\auth\\has-any-authority.directive.ts","sourceRoot":"","sources":["E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\angular-router-loader\\src\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\node_modules\\tslint-loader\\index.js!E:\\jhipster\\jhipster-sample-app-elasticsearch\\src\\main\\webapp\\app\\shared\\auth\\has-any-authority.directive.ts"],"names":[],"mappings":";;;AAAA,sCAAgF;AAChF,iEAA+D;AAE/D;;;;;;;;;;GAUG;AAIH;IAGI,kCACY,cAA8B,EAC9B,WAA6B,EAC7B,gBAAkC;QAFlC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAkB;QAC7B,qBAAgB,GAAhB,gBAAgB,CAAkB;IAC3C,CAAC;IAGJ,sBAAI,wDAAkB;aAAtB,UAAuB,KAAwB;YAD/C,iBAMC;YAJG,IAAI,CAAC,WAAW,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC/D,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,uDAAuD;YACvD,IAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,UAAU,EAAE,EAAjB,CAAiB,CAAC,CAAC;QAC1F,CAAC;;;OAAA;IAEO,6CAAU,GAAlB;QACI,IAAM,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9E,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,eAAe,EAAE;YACjB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC9D;IACL,CAAC;;IAbD;QADC,YAAK,EAAE;;;sEAMP;IAfQ,wBAAwB;QAHpC,gBAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;SACnC,CAAC;qEAK8B,gCAAc,oBAAd,gCAAc,oDACjB,kBAAW,oBAAX,kBAAW,oDACN,uBAAgB,oBAAhB,uBAAgB;OANrC,wBAAwB,CAwBpC;IAAD,+BAAC;CAAA,AAxBD,IAwBC;AAxBY,4DAAwB","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\n\r\n/**\r\n * @whatItDoes Conditionally includes an HTML element if current user has any\r\n * of the authorities passed as the `expression`.\r\n *\r\n * @howToUse\r\n * ```\r\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\r\n *\r\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\r\n * ```\r\n */\r\n@Directive({\r\n    selector: '[jhiHasAnyAuthority]'\r\n})\r\nexport class HasAnyAuthorityDirective {\r\n    private authorities: string[];\r\n\r\n    constructor(\r\n        private accountService: AccountService,\r\n        private templateRef: TemplateRef<any>,\r\n        private viewContainerRef: ViewContainerRef\r\n    ) {}\r\n\r\n    @Input()\r\n    set jhiHasAnyAuthority(value: string | string[]) {\r\n        this.authorities = typeof value === 'string' ? [value] : value;\r\n        this.updateView();\r\n        // Get notified each time authentication state changes.\r\n        this.accountService.getAuthenticationState().subscribe(identity => this.updateView());\r\n    }\r\n\r\n    private updateView(): void {\r\n        const hasAnyAuthority = this.accountService.hasAnyAuthority(this.authorities);\r\n        this.viewContainerRef.clear();\r\n        if (hasAnyAuthority) {\r\n            this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n        }\r\n    }\r\n}\r\n"]}]}